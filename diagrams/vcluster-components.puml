@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!include <material/common>
!include <material/sync>
HIDE_STEREOTYPE()
LAYOUT_TOP_DOWN()

Person(user, "User", "Uses kubectl")

System_Boundary(host, "Physical Host Cluster") {
    System_Boundary(vcluster, "vCluster") {
        Container(controlPlane, "vCluster Control Plane", "Manages the virtual cluster")
        Container(syncer, "Syncer", "Synchronizes resources between virtual and host clusters", $sprite="ma_sync")
        System_Boundary(context, "Context inside virtual cluster") {
            System_Boundary(ns1, "ns-1 namespace") {
                Container(ns1High, "high-level resources", "deployment, crd", "Resources")
                Container(ns1Low, "low-level resources", "pod-1, svc-a", "Resources")
            }

            System_Boundary(ns2, "ns-2 namespace") {
                Container(ns2High, "high-level resources", "statefulset, job", "Resources")
                Container(ns2Low, "low-level resources", "pod-1, svc-a", "Resources")
            }
        }
    }

    System_Boundary(hostResources, "Host Cluster Resources") {
        Container(hostPod1, "pod-1-x-ns1", "Host Pod 1 for ns-1", "Resources")
        Container(hostSvcA1, "svc-a-x-ns1", "Host Service A for ns-1", "Resources")
        Container(hostPod2, "pod-1-x-ns2", "Host Pod 1 for ns-2", "Resources")
        Container(hostSvcA2, "svc-a-x-ns2", "Host Service A for ns-2", "Resources")
        System(network, "regular networking", "Handles network traffic")
    }
}

Rel(user, controlPlane, "kubectl")
Rel(controlPlane, syncer, "Manages syncer")
Rel(ns1Low, syncer, "synchronizes")
Rel(ns2Low, syncer, "synchronizes")
Rel(syncer, hostPod1, "synchronizes")
Rel(syncer, hostSvcA1, "synchronizes")
Rel(syncer, hostPod2, "synchronizes")
Rel(syncer, hostSvcA2, "synchronizes")
BiRel(hostPod1, network, "")
BiRel(hostSvcA1, network, "")
BiRel(hostPod2, network, "")
BiRel(hostSvcA2, network, "")

@enduml

